name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - master
    - develop
    - feature/netcore
  tags:
    include:
      - v*
  paths:
    exclude:
    - '*.md'

pr:
  branches:
    include:
    - develop
    - master
    - release/*
    - feature/netcore
  paths:
    exclude:
    - '*.md'

resources:
  repositories:
    - repository: templates
      type: github
      name: CluedIn-io/AzurePipelines.Templates
      endpoint: 'CluedIn-io'

pool:
  vmImage: 'windows-latest'

variables:
  - group: nuget  
  - name: testFolderPath
    value: '$(Build.SourcesDirectory)/test'
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: true

steps:

  # Configure NuGet
- pwsh: |
    @('develop','release','AzurePipelines') | ForEach-Object{
        dotnet nuget update  source $_ -p $env:NUGET_KEY -u VssSessionToken --configfile nuget.config
    }
  condition: and(succeeded(), variables['nuget.key'])
  displayName: 'Add api token to access nuget artifacts'
  env:
    NUGET_KEY: $(nuget.key)

- template: crawler.default.build.yml@templates

- template: documentation.publish.yml@templates

- task: DotNetCoreCLI@2
  displayName: 'Create Netcore NuGet packages'
  condition: and ( succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/feature/netcore'))
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/nuget'
    versioningScheme: 'byEnvVar'
    versionEnvVar: GITVERSION_SEMVER
    includeSymbols: true
    nugetConfigPath: nuget.config

- task: NuGetCommand@2
  displayName: 'Push Netcore to develop feed'
  condition: and ( succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/feature/netcore'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/**/*.nupkg'
    allowPackageConflicts: true
    publishVstsFeed: 'develop'
    includeSymbols: true
